{"version":3,"sources":["components/header.js","components/Description.js","components/card.js","components/Scoreboard.js","components/Shuffle.js","components/Teams.js","components/CardArea.js","App.js","index.js"],"names":["Header","id","Description","symbol","label","Card","props","prevClick","className","randomID","name","nickname","src","alt","school","Scoreboard","currentScore","highScore","gameStateText","Shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Teams","CardArea","arrayLength","useState","Array","keys","maxArray","setMaxArray","teamsLocal","setTeamsLocal","setCurrentScore","setHighScore","setGameStateText","setGameOver","clickActions","e","copyOfTeamsLocal","cardNodeID","target","closest","localGameOver","checkPrevClick","updateTeamArray","updatedScore","document","querySelector","classList","remove","restartGame","add","forEach","team","useEffect","querySelectorAll","item","addEventListener","removeEventListener","map","x","i","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0829b792.chunk.js","sourcesContent":["import React, { useEffect, useState }  from 'react';\n\nconst Header = () => {\n\n\n    return (\n        <div>\n            <h1 id=\"header-text\">\n                The Memory Game, College Football Edition\n            </h1>\n            {/* <h2>\n                College Football Edition\n            </h2> */}\n        </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState }  from 'react';\nimport Emoji from 'a11y-react-emoji'\n\nconst Description = () => {\n\n    return (\n        <div>\n            <h2>\n                How to play <Emoji symbol=\"ðŸ¤”\" label=\"thinking-face\" />\n            </h2>\n            <p>\n                This game is a test of your memory. To win, click on a unique card each turn. If you click on a card you already clicked on, you lose!\n            </p>\n            <p>\n                After each click, the order of the cards will automatically randomize.\n            </p>\n        </div>\n    )\n}\n\nexport default Description;","import React, { useEffect, useState }  from 'react';\n\nconst Card = (props) => {\n    let prevClickText;\n    if(props.prevClick === false){\n        prevClickText = \"false\";\n    } else if(props.prevClick === true){\n        prevClickText = \"true\";\n    }\n\n    return (\n        <div className=\"card\" id={props.randomID} name={props.nickname}>\n            <img className=\"team-logo\" src={props.src} alt=\"\"></img>\n            <div className=\"school\">\n                {props.school}\n            </div>\n            <div className=\"nickname\">\n                {props.nickname}\n            </div>\n            {/* <div>{prevClickText}</div> */}\n        </div>\n    )\n}\n\nexport default Card;","import React, { useEffect, useState }  from 'react';\nimport Emoji from 'a11y-react-emoji'\n\nconst Scoreboard = (props) => {\n\n    return (\n        <div>\n            <h2>\n                Current score: <span id=\"current-score\">{props.currentScore}</span>, High score: <span id=\"high-score\">{props.highScore}</span>\n            </h2>\n            <div id=\"game-text\">\n                {props.gameStateText}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Scoreboard;","function Shuffle(array) {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  export default Shuffle;","const Teams  = [\n    {\n        school: \"South Carolina\", \n        nickname: \"Gamecocks\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/34/834/full/5gje9m4b1shmcd442rkpxkeb8.png\",\n    },\n    {\n        school: \"Oregon\", \n        nickname: \"Ducks\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/33/797/full/ehrrx1qjof2owakh79jq.png\",\n    },\n    {\n        school: \"Texas\", \n        nickname: \"Longhorns\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/34/865/full/5o2wuto6hq2592hhy9e4prm6e.gif\",\n    },\n    {\n        school: \"Iowa State\", \n        nickname: \"Cyclones\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/32/713/full/4612_iowa_state_cyclones-primary-2008.png\",\n    },\n    {\n        school: \"Syracuse\", \n        nickname: \"Orange\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/34/859/full/3361_syracuse_orange-mascot-0.png\",\n    },\n    {\n        school: \"Nebraska\", \n        nickname: \"Cornhuskers\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/33/766/full/u5a0z147qunbzxwnec8ef7bkl.png\",\n    },\n    {\n        school: \"Ohio State\", \n        nickname: \"Buckeyes\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/33/791/full/7645_ohio_state_buckeyes-primary-2013.png\",\n    },\n    {\n        school: \"Colorado\", \n        nickname: \"Buffaloes\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/30/647/full/7489.png\",\n    },\n    {\n        school: \"Ole Miss\", \n        nickname: \"Rebels\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/32/754/full/1976_mississippi_rebels-primary-1996.png\",\n    },\n    {\n        school: \"Virginia\", \n        nickname: \"Cavaliers\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/35/898/full/7135.png\",\n    },\n    {\n        school: \"Southern Methodist\", \n        nickname: \"Mustangs\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/34/842/full/2632.png\",\n    },\n    {\n        school: \"Boise State\", \n        nickname: \"Broncos\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/30/617/full/3690_boise_state_broncos-primary-2013.png\",\n    },\n    {\n        school: \"California\", \n        nickname: \"Bears\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/30/630/full/7456.png\",\n    },\n    {\n        school: \"Miami\", \n        nickname: \"Hurricanes\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/32/748/full/2848.png\",\n    },\n    {\n        school: \"Navy\", \n        nickname: \"Midshipmen\", \n        prevClick: false, \n        src: \"https://content.sportslogos.net/logos/33/765/full/4670.png\",\n    },\n  ]\n  \n  export default Teams;","import React, { useEffect, useState }  from 'react';\nimport Card from './card';\nimport Scoreboard from './Scoreboard';\nimport Shuffle from './Shuffle';\nimport Teams from './Teams';\nimport Emoji from 'a11y-react-emoji'\n\nconst CardArea = () => {\n    const numOfCards = 12;\n    const [maxArray, setMaxArray] = useState(Shuffle(arrayGenerator(numOfCards)));\n    const [teamsLocal, setTeamsLocal] = useState(Teams);\n    const [currentScore, setCurrentScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [gameStateText, setGameStateText] = useState(\"You got this!\");\n    const [gameOver, setGameOver] = useState(false);\n\n    function arrayGenerator(arrayLength){\n        return [...Array(arrayLength).keys()]\n    }; \n\n    const clickActions = (e) => {\n        const copyOfTeamsLocal = [...teamsLocal];\n        const cardNodeID = e.target.closest(\".card\").id;\n        const localGameOver = copyOfTeamsLocal[cardNodeID].prevClick;\n\n        if(localGameOver === true){\n            setGameOver(true);\n        }\n\n        checkPrevClick(copyOfTeamsLocal, localGameOver);\n        updateTeamArray(cardNodeID, copyOfTeamsLocal,localGameOver);\n        setMaxArray(Shuffle([...maxArray]))\n    }\n\n    const updateTeamArray = (cardNodeID, copyOfTeamsLocal,localGameOver) => {\n        if(localGameOver === false){\n            copyOfTeamsLocal[cardNodeID].prevClick = true;\n            setTeamsLocal(copyOfTeamsLocal);\n        }\n    }\n\n    const checkPrevClick = (copyOfTeamsLocal, localGameOver) => {\n        const updatedScore = currentScore + 1;\n\n        if(updatedScore !== numOfCards && localGameOver !== true){\n            setGameOver(false);\n            setGameStateText(\"You got this!\");\n            document.querySelector(\"#game-text\").classList.remove(\"red-text\");\n            document.querySelector(\"#game-text\").classList.remove(\"green-text\")\n            setCurrentScore(updatedScore);\n        } else if(updatedScore === numOfCards || localGameOver === true){\n            if(updatedScore === numOfCards){\n                setHighScore(updatedScore)\n            } else if(currentScore > highScore){\n                setHighScore(currentScore)\n            }\n\n            restartGame(copyOfTeamsLocal);\n\n            if(localGameOver === true){\n                setGameStateText(\"Oh no! Try again.\");\n                document.querySelector(\"#game-text\").classList.add(\"red-text\");\n            } else {\n                setGameStateText(\"Congrats! You won.\");\n                document.querySelector(\"#game-text\").classList.add(\"green-text\");\n            }\n        }\n    }\n\n    const restartGame = (copyOfTeamsLocal) => {\n        setCurrentScore(0);\n\n        copyOfTeamsLocal.forEach(team => \n            {\n                team.prevClick = false;\n            }\n        );\n        setTeamsLocal(copyOfTeamsLocal);\n    }\n\n    useEffect(() => {\n        document.querySelectorAll('.card').forEach(item => \n            {\n                item.addEventListener('click', clickActions);\n            }\n        )\n\n        return () => {\n            document.querySelectorAll('.card').forEach(item => \n                {\n                    item.removeEventListener('click', clickActions);\n                }\n            )\n        };\n    });\n\n    return (\n        <div>\n            <Scoreboard\n                teamsLocal={teamsLocal}\n                currentScore={currentScore}\n                highScore={highScore}\n                gameStateText={gameStateText}\n            />\n            <div className=\"card-area\">\n                {[...Array(numOfCards)].map((x, i) =>\n                    <Card \n                        key={i}\n                        randomID={maxArray[i]}\n                        school={teamsLocal[maxArray[i]].school}\n                        nickname={teamsLocal[maxArray[i]].nickname}\n                        src={teamsLocal[maxArray[i]].src}\n                        prevClick={teamsLocal[maxArray[i]].prevClick}\n                    />\n                )}\n            </div>\n            {/* <div className=\"spacer-div\"></div> */}\n        </div>\n    )\n}\n\nexport default CardArea;","import Header from './components/header';\nimport Description from './components/Description';\n// import Card from './components/card';\nimport CardArea from './components/CardArea';\n// import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Description />\n      <CardArea />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}